Class notes

github.com/MGIS-UMN/GIS5577_week7


Vector
PostGIS cheat sheet 
Spatial predicates 
Raster
PostGIS cheat sheet raster
GDAL library (C++)
CREATE EXTENSION POSTGIS_Raster;
Visualization
WebMapping (Vector / Raster)
NoSQL  (Spatial)
Neo4J (graphing database)
Routing
Spatial networks
Social network
Big Spatial Data Platforms


https://lucid.app/lucidchart/b68d2fa2-5fbf-4bff-8610-9fb27ceb2938/edit?invitationId=inv_2da02c8f-b275-46e3-8ed3-f0322920b072&page=0_0#


Albums
DDL includes: Song, Artist(s), Year,  Genre,
Collaborations
DDL includes: collaborating artists, year, instruments, ?
Marketing
DDL needs to include: Number of sales, number of #1 hits/singles, awards, ?
Needs to refer to each album.
Artist Personal Life
DDL includes: Birth Place, Birth Year, Spouse, Address,



C:\Users\dahaynes>cd C:\Program Files\PostgreSQL\13\bin

C:\Program Files\PostgreSQL\13\bin>cd ../../../../..

C:\>cd "c:\Program Files"

c:\Program Files>cd PostgreSQL

c:\Program Files\PostgreSQL>cd 13

c:\Program Files\PostgreSQL\13>cd bin

c:\Program Files\PostgreSQL\13\bin>dir/p
 Volume in drive C is Windows
 Volume Serial Number is CCC7-8C40

 Directory of c:\Program Files\PostgreSQL\13\bin



raster2pgsql -C -x -I -Y -F -t 250x250 -s 4326 [raster_path] [raster_table] > [filelocation]

-C: add raster constraints
-x: spatial extent constraint. This is important if you have a global raster
-I: add GIST spatial index
-Y: use copy statements (faster) than inserts
-F: add the filename to the new table (optional)
-t: tile size. Must use two positive integers with the letter x between them
-s: spatial reference id


RELEASE: 3.1.1 GDAL_VERSION=32 (3.1.1)
USAGE: raster2pgsql [<options>] <raster>[ <raster>[ ...]] [[<schema>.]<table>]
  Multiple rasters can also be specified using wildcards (*,?).

OPTIONS:
  -s <srid> Set the SRID field. Defaults to 0. If SRID not
     provided or is 0, raster's metadata will be checked to
     determine an appropriate SRID.
  -b <band> Index (1-based) of band to extract from raster. For more
      than one band index, separate with comma (,). Ranges can be
      defined by separating with dash (-). If unspecified, all bands
      of raster will be extracted.
  -t <tile size> Cut raster into tiles to be inserted one per
      table row. <tile size> is expressed as WIDTHxHEIGHT.
      <tile size> can also be "auto" to allow the loader to compute
      an appropriate tile size using the first raster and applied to
      all rasters.
  -P Pad right-most and bottom-most tiles to guarantee that all tiles
     have the same width and height.
  -R  Register the raster as an out-of-db (filesystem) raster. Provided
      raster should have absolute path to the file
 (-d|a|c|p) These are mutually exclusive options:
     -d  Drops the table, then recreates it and populates
         it with current raster data.
     -a  Appends raster into current table, must be
         exactly the same table schema.
     -c  Creates a new table and populates it, this is the
         default if you do not specify any options.
     -p  Prepare mode, only creates the table.
  -f <column> Specify the name of the raster column
  -F  Add a column with the filename of the raster.
  -n <column> Specify the name of the filename column. Implies -F.
  -l <overview factor> Create overview of the raster. For more than
      one factor, separate with comma(,). Overview table name follows
      the pattern o_<overview factor>_<table>. Created overview is
      stored in the database and is not affected by -R.
  -q  Wrap PostgreSQL identifiers in quotes.
  -I  Create a GIST spatial index on the raster column. The ANALYZE
      command will automatically be issued for the created index.
  -M  Run VACUUM ANALYZE on the table of the raster column. Most
      useful when appending raster to existing table with -a.
  -C  Set the standard set of constraints on the raster
      column after the rasters are loaded. Some constraints may fail
      if one or more rasters violate the constraint.
  -x  Disable setting the max extent constraint. Only applied if
      -C flag is also used.
  -r  Set the constraints (spatially unique and coverage tile) for
      regular blocking. Only applied if -C flag is also used.
  -T <tablespace> Specify the tablespace for the new table.
      Note that indices (including the primary key) will still use
      the default tablespace unless the -X flag is also used.
  -X <tablespace> Specify the tablespace for the table's new index.
      This applies to the primary key and the spatial index if
      the -I flag is used.
  -N <nodata> NODATA value to use on bands without a NODATA value.
  -k  Skip NODATA value checks for each raster band.
  -E <endian> Control endianness of generated binary output of
      raster. Use 0 for XDR and 1 for NDR (default). Only NDR
      is supported at this time.
  -V <version> Specify version of output WKB format. Default
      is 0. Only 0 is supported at this time.
  -e  Execute each statement individually, do not use a transaction.
  -Y  Use COPY statements instead of INSERT statements.
  -G  Print the supported GDAL raster formats.
  -?  Display this help screen.



raster2pgsql -C -x -I -Y -F -t 350x200 -s 4326 E:\git\GIS5577\GIS5577_week7\geotiffs\glc2000_clipped_nodata.tif global_landcover_2000_350_250

 “>”  c:\work\glc2000.sql 
“|”  psql -h [host] -d [x500] -U [x500]


raster2pgsql -C -x -I -Y -F -t 350x200 -s 4326 E:\git\GIS5577\GIS5577_week7\geotiffs\glc2000_clipped_nodata.tif global_landcover_2000_350_250 | psql -h spatialdb.healthgeog.org -U x500 -d x500


250x250  	= 312
350x250 	= 266
450x450 =       =105

500x800	= 504			(this was the meris_2010 one)
100x150	= 1,235
700x800	= 40


postgis.net/docs/manual-3.4/raster_cheatsheet-en.html


select rid, ST_envelope(Rast) as geom
from global_landcover_2000_350_250

select rid, ST_MetaData(Rast) as geom
from global_landcover_2000_350_250

select rid, (ST_MetaData(Rast)).* as geom
from global_landcover_2000_350_250


with myboundary as 
(
SELECT name, geom
FROM states
where name = 'Minnesota'
)
select ST_Union(ST_CLip(r.rast, g.geom)) as rast
into minnesota
from global_landcover_2000_350_250 r
inner join myboundary g on ST_Intersects(r.rast, 1, g.geom)
